package org.josfranmc.demo;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

public class Database {

    public static void initialize() {
		try {
			Connection connection = new DbConnection().getConnection();
	        
			Statement stm = connection.createStatement();
			stm.execute("DROP TABLE ORDERS_ITEMS IF EXISTS");
			stm.execute("DROP TABLE ITEMS IF EXISTS");
			stm.execute("DROP TABLE ORDERS IF EXISTS");
			stm.execute("DROP TABLE CLIENTS IF EXISTS");
			//stm.execute("DROP SEQUENCE HIBERNATE_SEQUENCE IF EXISTS");
			
			stm.execute("CREATE TABLE CLIENTS (ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1), NAME VARCHAR(70) NOT NULL, PRIMARY KEY (ID))");
			stm.execute("CREATE TABLE ORDERS (ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), PRICE BIGINT NOT NULL, CLIENT BIGINT NOT NULL, PRIMARY KEY (ID))");
			stm.execute("CREATE TABLE ITEMS (ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), DESCRIPTION VARCHAR(255) NOT NULL, PRIMARY KEY (ID))");
			stm.execute("CREATE TABLE ORDERS_ITEMS (ORDER_ID BIGINT NOT NULL, ITEM_ID BIGINT NOT NULL)");

			stm.execute("ALTER TABLE ORDERS_ITEMS ADD CONSTRAINT FK_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEMS");
			stm.execute("ALTER TABLE ORDERS_ITEMS ADD CONSTRAINT FK_ORDER FOREIGN KEY (ORDER_ID) REFERENCES ORDERS");
			stm.execute("ALTER TABLE ORDERS ADD CONSTRAINT FK_CLIENT FOREIGN KEY (CLIENT) REFERENCES CLIENTS");
			
			//stm.execute("CREATE SEQUENCE HIBERNATE_SEQUENCE START WITH 1 INCREMENT BY 1");
	        connection.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
    }
}